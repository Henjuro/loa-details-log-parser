{"version":3,"file":"log-lines.modern.js","sources":["../src/util.ts","../src/log-lines.ts"],"sourcesContent":["export function tryParseInt(intString: string, defaultValue = 0) {\r\n  if (typeof intString === \"number\") {\r\n    if (isNaN(intString)) return defaultValue;\r\n    return intString;\r\n  }\r\n\r\n  let intNum: number;\r\n\r\n  try {\r\n    intNum = parseInt(intString);\r\n    if (isNaN(intNum)) intNum = defaultValue;\r\n  } catch {\r\n    intNum = defaultValue;\r\n  }\r\n\r\n  return intNum;\r\n}\r\n","import { tryParseInt } from \"./util.js\";\r\n\r\nclass LogLine {\r\n  lineSplit: string[];\r\n  timestamp: Date;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    this.lineSplit = lineSplit;\r\n    this.timestamp = new Date(this.lineSplit[1]);\r\n  }\r\n}\r\n\r\n// logId = 0\r\nexport class LogMessage extends LogLine {\r\n  message: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.message = this.lineSplit[2];\r\n  }\r\n}\r\n\r\n// logId = 1\r\nexport class LogInitEnv extends LogLine {\r\n  playerId: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.playerId = lineSplit[2];\r\n  }\r\n}\r\n\r\n// logId = 2\r\nexport class LogPhaseTransition extends LogLine {\r\n  phaseCode: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.phaseCode = tryParseInt(lineSplit[2]);\r\n  }\r\n}\r\n\r\n// logId = 3\r\nexport class LogNewPc extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  classId: number;\r\n  class: string;\r\n  gearScore: string;\r\n  currentHp: number;\r\n  maxHp: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.classId = tryParseInt(lineSplit[4]);\r\n    this.class = lineSplit[5] || \"UnknownClass\";\r\n    /* this.level = tryParseInt(lineSplit[6]); */\r\n    this.gearScore = lineSplit[7];\r\n    this.currentHp = tryParseInt(lineSplit[8]);\r\n    this.maxHp = tryParseInt(lineSplit[9]);\r\n  }\r\n}\r\n\r\n// logId = 4\r\nexport class LogNewNpc extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  currentHp: number;\r\n  maxHp: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    //this.npcId = tryParseInt(lineSplit[3]);\r\n    this.name = lineSplit[4] || \"Unknown Entity\";\r\n    this.currentHp = tryParseInt(lineSplit[5]);\r\n    this.maxHp = tryParseInt(lineSplit[6]);\r\n  }\r\n}\r\n\r\n// logId = 5\r\nexport class LogDeath extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  killerId: string;\r\n  killerName: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.killerId = lineSplit[4];\r\n    this.killerName = lineSplit[5] || \"Unknown Entity\";\r\n  }\r\n}\r\n\r\n// logId = 6\r\nexport class LogSkillStart extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  skillId: string;\r\n  skillName: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.skillId = lineSplit[4];\r\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\r\n  }\r\n}\r\n\r\n// logId = 7\r\nexport class LogSkillStage extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  skillId: string;\r\n  skillName: string;\r\n  skillStage: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.skillId = lineSplit[4];\r\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\r\n    this.skillStage = tryParseInt(lineSplit[6]);\r\n  }\r\n}\r\n\r\n// logId = 8\r\nexport class LogDamage extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  skillId: number;\r\n  skillName: string;\r\n  skillEffectId: number;\r\n  skillEffect: string;\r\n  targetId: string;\r\n  targetName: string;\r\n  damage: number;\r\n  damageModifier: boolean;\r\n  isCrit: boolean;\r\n  isBackAttack: boolean;\r\n  isFrontAttack: boolean;\r\n  currentHp: number;\r\n  maxHp: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.skillId = tryParseInt(lineSplit[4]);\r\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\r\n    this.skillEffectId = tryParseInt(lineSplit[6]);\r\n    this.skillEffect = lineSplit[7];\r\n    this.targetId = lineSplit[8];\r\n    this.targetName = lineSplit[9] || \"Unknown Entity\";\r\n    this.damage = tryParseInt(lineSplit[10]);\r\n    this.damageModifier = lineSplit[11] == \"1\";\r\n    this.isCrit = lineSplit[12] == \"1\";\r\n    this.isBackAttack = lineSplit[13] == \"1\";\r\n    this.isFrontAttack = lineSplit[14] == \"1\";\r\n    this.currentHp = tryParseInt(lineSplit[15]);\r\n    this.maxHp = tryParseInt(lineSplit[16]);\r\n  }\r\n}\r\n\r\n// logId = 9\r\nexport class LogHeal extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  healAmount: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.healAmount = tryParseInt(lineSplit[4]);\r\n    //this.currentHp = tryParseInt(lineSplit[5]);\r\n  }\r\n}\r\n\r\n// logId = 10\r\nexport class LogBuff extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  buffId: string;\r\n  buffName: string;\r\n  isNew: boolean;\r\n  sourceId: string;\r\n  sourceName: string;\r\n  shieldAmount: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.buffId = lineSplit[4];\r\n    this.buffName = lineSplit[5];\r\n    this.isNew = lineSplit[6] == \"1\";\r\n    this.sourceId = lineSplit[7];\r\n    this.sourceName = lineSplit[8] || \"Unknown Entity\";\r\n    this.shieldAmount = tryParseInt(lineSplit[9]);\r\n  }\r\n}\r\n\r\n// logId = 11\r\nexport class LogCounterattack extends LogLine {\r\n  id: string;\r\n  name: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    /* this.targetId = lineSplit[4];\r\n    this.targetName = lineSplit[5] || \"Unknown Entity\"; */\r\n  }\r\n}\r\n"],"names":["intString","defaultValue","isNaN","intNum","parseInt","_unused","LogLine","constructor","lineSplit","this","timestamp","LogMessage","super","message","LogInitEnv","playerId","LogPhaseTransition","phaseCode","tryParseInt","id","name","classId","class","gearScore","currentHp","maxHp","LogNewNpc","LogDeath","killerId","killerName","skillId","skillName","LogSkillStage","skillStage","LogDamage","skillEffectId","skillEffect","targetId","targetName","damage","damageModifier","isCrit","isBackAttack","isFrontAttack","LogHeal","healAmount","LogBuff","buffId","buffName","isNew","sourceId","sourceName","shieldAmount","LogCounterattack"],"mappings":"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"}