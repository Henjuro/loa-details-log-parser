{"version":3,"file":"log-lines.modern.js","sources":["../src/util.ts","../src/log-lines.ts"],"sourcesContent":["export function tryParseInt(intString: string, defaultValue = 0, radix = 10) {\r\n  if (typeof intString === \"number\") {\r\n    if (isNaN(intString)) return defaultValue;\r\n    return intString;\r\n  }\r\n\r\n  let intNum: number;\r\n\r\n  try {\r\n    intNum = parseInt(intString, radix);\r\n    if (isNaN(intNum)) intNum = defaultValue;\r\n  } catch {\r\n    intNum = defaultValue;\r\n  }\r\n\r\n  return intNum;\r\n}\r\n","import { tryParseInt } from \"./util.js\";\r\n\r\nclass LogLine {\r\n  lineSplit: string[];\r\n  timestamp: Date;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    this.lineSplit = lineSplit;\r\n    this.timestamp = new Date(this.lineSplit[1]);\r\n  }\r\n}\r\n\r\n// logId = 0\r\nexport class LogMessage extends LogLine {\r\n  message: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.message = this.lineSplit[2];\r\n  }\r\n}\r\n\r\n// logId = 1\r\nexport class LogInitEnv extends LogLine {\r\n  playerId: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.playerId = lineSplit[2];\r\n  }\r\n}\r\n\r\n// logId = 2\r\nexport class LogPhaseTransition extends LogLine {\r\n  phaseCode: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.phaseCode = tryParseInt(lineSplit[2]);\r\n  }\r\n}\r\n\r\n// logId = 3\r\nexport class LogNewPc extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  classId: number;\r\n  class: string;\r\n  gearScore: string;\r\n  currentHp: number;\r\n  maxHp: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.classId = tryParseInt(lineSplit[4]);\r\n    this.class = lineSplit[5] || \"UnknownClass\";\r\n    /* this.level = tryParseInt(lineSplit[6]); */\r\n    this.gearScore = lineSplit[7];\r\n    this.currentHp = tryParseInt(lineSplit[8]);\r\n    this.maxHp = tryParseInt(lineSplit[9]);\r\n  }\r\n}\r\n\r\n// logId = 4\r\nexport class LogNewNpc extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  currentHp: number;\r\n  maxHp: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    //this.npcId = tryParseInt(lineSplit[3]);\r\n    this.name = lineSplit[4] || \"Unknown Entity\";\r\n    this.currentHp = tryParseInt(lineSplit[5]);\r\n    this.maxHp = tryParseInt(lineSplit[6]);\r\n  }\r\n}\r\n\r\n// logId = 5\r\nexport class LogDeath extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  killerId: string;\r\n  killerName: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.killerId = lineSplit[4];\r\n    this.killerName = lineSplit[5] || \"Unknown Entity\";\r\n  }\r\n}\r\n\r\n// logId = 6\r\nexport class LogSkillStart extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  skillId: string;\r\n  skillName: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.skillId = lineSplit[4];\r\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\r\n  }\r\n}\r\n\r\n// logId = 7\r\nexport class LogSkillStage extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  skillId: string;\r\n  skillName: string;\r\n  skillStage: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.skillId = lineSplit[4];\r\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\r\n    this.skillStage = tryParseInt(lineSplit[6]);\r\n  }\r\n}\r\n\r\n// logId = 8\r\nexport class LogDamage extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  skillId: number;\r\n  skillName: string;\r\n  skillEffectId: number;\r\n  skillEffect: string;\r\n  targetId: string;\r\n  targetName: string;\r\n  damage: number;\r\n  damageModifier: number;\r\n  currentHp: number;\r\n  maxHp: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.skillId = tryParseInt(lineSplit[4]);\r\n    this.skillName = lineSplit[5] || \"Unknown Skill\";\r\n    this.skillEffectId = tryParseInt(lineSplit[6]);\r\n    this.skillEffect = lineSplit[7];\r\n    this.targetId = lineSplit[8];\r\n    this.targetName = lineSplit[9] || \"Unknown Entity\";\r\n    this.damage = tryParseInt(lineSplit[10]);\r\n    this.damageModifier = tryParseInt(lineSplit[11], 0, 16);\r\n    this.currentHp = tryParseInt(lineSplit[12]);\r\n    this.maxHp = tryParseInt(lineSplit[13]);\r\n  }\r\n}\r\n\r\n// logId = 9\r\nexport class LogHeal extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  healAmount: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.healAmount = tryParseInt(lineSplit[4]);\r\n    //this.currentHp = tryParseInt(lineSplit[5]);\r\n  }\r\n}\r\n\r\n// logId = 10\r\nexport class LogBuff extends LogLine {\r\n  id: string;\r\n  name: string;\r\n  buffId: string;\r\n  buffName: string;\r\n  isNew: boolean;\r\n  sourceId: string;\r\n  sourceName: string;\r\n  shieldAmount: number;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    this.buffId = lineSplit[4];\r\n    this.buffName = lineSplit[5];\r\n    this.isNew = lineSplit[6] == \"1\";\r\n    this.sourceId = lineSplit[7];\r\n    this.sourceName = lineSplit[8] || \"Unknown Entity\";\r\n    this.shieldAmount = tryParseInt(lineSplit[9]);\r\n  }\r\n}\r\n\r\n// logId = 11\r\nexport class LogCounterattack extends LogLine {\r\n  id: string;\r\n  name: string;\r\n\r\n  constructor(lineSplit: string[]) {\r\n    super(lineSplit);\r\n\r\n    this.id = lineSplit[2];\r\n    this.name = lineSplit[3] || \"Unknown Entity\";\r\n    /* this.targetId = lineSplit[4];\r\n    this.targetName = lineSplit[5] || \"Unknown Entity\"; */\r\n  }\r\n}\r\n"],"names":["tryParseInt","intString","defaultValue","radix","isNaN","intNum","parseInt","_unused","LogLine","constructor","lineSplit","this","timestamp","Date","super","message","LogInitEnv","playerId","LogPhaseTransition","phaseCode","LogNewPc","id","name","classId","class","gearScore","currentHp","maxHp","LogNewNpc","LogDeath","killerId","killerName","skillId","skillName","LogSkillStage","skillStage","LogDamage","skillEffectId","skillEffect","targetId","targetName","damage","damageModifier","LogHeal","healAmount","buffId","buffName","isNew","sourceId","sourceName","shieldAmount","LogCounterattack"],"mappings":"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"}